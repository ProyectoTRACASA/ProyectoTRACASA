<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAzEAAAAiCAIAAADgXsB/AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAABJ5JREFUeF7t3N1vU2UcwPHfunYrG5viQG/UTRijm7wmSmK8M/Feid557Z8gL7K2
        G8rL0ARhc7KtPe3puvl6aYyJIQZuTAzCGDI6HOC20+50HSTCkI2Ox+e0g4ttEiOH9OabfPLNc07P6fUv
        Pc+pqNmLAAAAKC0Z7ngXAAAApSUzB18DAABAaUk+tBEAAAClJSpYDwAAgNIS1bpeBRsopZRSSmkJKyrY
        okIBSimllFJawspCqOW/yIcBAADwpIj6OJBvbVgIvqQOtczte0GFN6xoIbwh37Zhvh0AAADuE9W+6d6+
        +ru7n1ehxvyHDerQZr1Y0UK4UY9l+TZKKaWUUupyRR3cqdp2qOBWFd5+b09AtW55pJcppZRSSqnrlbnd
        zfN7WlRwuzrwqu79/VtV67Z/oe/ZovZTSimllFKXK3dDjXda1+vOhTfmDwTm25pWlA83qVBBkFJKKaWU
        uly591GT6ti8cDBwu7V+rr1xNtigu9x8m7OfbMkOMwAAALhCbu6tvxNumjvQPBvaeP/w1r/bNt1tDyw3
        1x7Ih5sWAAAA8ASIFX1/qGPX+SNvnzv81pXO93SHP3lnBZ/uunTUMdJBKaWUUkpdrswopVn3nWq2UrlH
        0tdQSimllFJ3K8990P96zy9vxM+1HPkhcOj7nV1ndhw7tdz2z37adhwAAABPhKxNXHsmPlbRNVTdc6nO
        vOrvHq6NpJariaRWR1NVxggAAABcJ76BGxJLS/e1MnOq6ptbYlgStyWeWVozI4mM9FvSTymllFJK3a50
        T1TEspWxnDc65YtmfYbtjdh6vbxlhpamlFJKKaWuV2oHb1Unb/rjM6sSM3oyK49k9Npv5pa3wsz5EllK
        KaWUUup6RbqvSXTSm5yRvnH54nqZOSXRtD6ztMakIzZOKaWUUkrd76oB2xOf8MQtielTae9gThJTDjO7
        uHioX0tTSimllFLXmtQmnZafOO8/eXnNwJR0pbzRSa9pe2K2s6k/ltULTyxT7rB0nc3+5oP9/pRSSiml
        9PGbmJD+cacvfpeR42drkpP+hOUfnHaeYDpXZB16Ec944lZR4QXMwv2UUkoppdSVmpaYEw6JXPAkRiu/
        TUv0D0lOSDIjA/YivU5ahZN6gtNX67GsOJlRSimllNLHb5EezmyR+GUxx6T/uvSmnIeaX99YeSZLFGey
        hzcDAADg8Zha4eGkJt2jXmO8+ssZ30BOzGnpTUs894Dz+LKwpczSFveZAQAAwBV6FEtmRc9gyZxUG5av
        b0JO/ik9k+XxaX/yL4nlNE8sW27YPsOuMKzKqKWrh7OlXwQAAID/LWE7A1lRWc9Vn2H5zamqwRsSzUjn
        WOF1S7v4uqX+qMIYrzTGdZ3dZ85//wMAAMAVGed3smTO6bOxq2sio1WfX6zpTT0VubLGGKvtG9WedqTq
        ekfqen9f2ztc1zdcGxlZHQUAAIA7aqLOoLWuZ3hdzwVp7jwdcJwpauoqLk7r882dP28+oZ3acnxR4RAA
        AAAueOXYj292fLXr6MCQUnJWqV+VKvYhfaj9ptS5An2ddqHgIqWUUkopdaNXlJpWamz69qxS/wChAvRu
        NS1c2AAAAABJRU5ErkJggg==
</value>
  </data>
</root>