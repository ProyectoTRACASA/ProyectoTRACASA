'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Sist_Control_Ingresos1.0")>  _
Partial Public Class SistemaControlDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertA_Abono(instance As A_Abono)
    End Sub
  Partial Private Sub UpdateA_Abono(instance As A_Abono)
    End Sub
  Partial Private Sub DeleteA_Abono(instance As A_Abono)
    End Sub
  Partial Private Sub InsertCa_Carreras(instance As Ca_Carreras)
    End Sub
  Partial Private Sub UpdateCa_Carreras(instance As Ca_Carreras)
    End Sub
  Partial Private Sub DeleteCa_Carreras(instance As Ca_Carreras)
    End Sub
  Partial Private Sub InsertCho_Choferes(instance As Cho_Choferes)
    End Sub
  Partial Private Sub UpdateCho_Choferes(instance As Cho_Choferes)
    End Sub
  Partial Private Sub DeleteCho_Choferes(instance As Cho_Choferes)
    End Sub
  Partial Private Sub InsertInfo_Informe_Barras(instance As Info_Informe_Barras)
    End Sub
  Partial Private Sub UpdateInfo_Informe_Barras(instance As Info_Informe_Barras)
    End Sub
  Partial Private Sub DeleteInfo_Informe_Barras(instance As Info_Informe_Barras)
    End Sub
  Partial Private Sub InsertPla_Planilla(instance As Pla_Planilla)
    End Sub
  Partial Private Sub UpdatePla_Planilla(instance As Pla_Planilla)
    End Sub
  Partial Private Sub DeletePla_Planilla(instance As Pla_Planilla)
    End Sub
  Partial Private Sub InsertU_Usuario(instance As U_Usuario)
    End Sub
  Partial Private Sub UpdateU_Usuario(instance As U_Usuario)
    End Sub
  Partial Private Sub DeleteU_Usuario(instance As U_Usuario)
    End Sub
  Partial Private Sub InsertZo_Zona(instance As Zo_Zona)
    End Sub
  Partial Private Sub UpdateZo_Zona(instance As Zo_Zona)
    End Sub
  Partial Private Sub DeleteZo_Zona(instance As Zo_Zona)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.PROYECTO_TRACASA.My.MySettings.Default.Sist_Control_Ingresos1_0ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property A_Abono() As System.Data.Linq.Table(Of A_Abono)
		Get
			Return Me.GetTable(Of A_Abono)
		End Get
	End Property
	
	Public ReadOnly Property Ca_Carreras() As System.Data.Linq.Table(Of Ca_Carreras)
		Get
			Return Me.GetTable(Of Ca_Carreras)
		End Get
	End Property
	
	Public ReadOnly Property Cho_Choferes() As System.Data.Linq.Table(Of Cho_Choferes)
		Get
			Return Me.GetTable(Of Cho_Choferes)
		End Get
	End Property
	
	Public ReadOnly Property Info_Informe_Barras() As System.Data.Linq.Table(Of Info_Informe_Barras)
		Get
			Return Me.GetTable(Of Info_Informe_Barras)
		End Get
	End Property
	
	Public ReadOnly Property Pla_Planilla() As System.Data.Linq.Table(Of Pla_Planilla)
		Get
			Return Me.GetTable(Of Pla_Planilla)
		End Get
	End Property
	
	Public ReadOnly Property U_Usuario() As System.Data.Linq.Table(Of U_Usuario)
		Get
			Return Me.GetTable(Of U_Usuario)
		End Get
	End Property
	
	Public ReadOnly Property Zo_Zona() As System.Data.Linq.Table(Of Zo_Zona)
		Get
			Return Me.GetTable(Of Zo_Zona)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.A_Abono")>  _
Partial Public Class A_Abono
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _A_ID As Integer
	
	Private _A_ID_Cho As Integer
	
	Private _A_Monto_Abono As Integer
	
	Private _A_Info_Vale As System.Nullable(Of Integer)
	
	Private _Info_Informe_Barras As EntityRef(Of Info_Informe_Barras)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnA_IDChanged()
    End Sub
    Partial Private Sub OnA_ID_ChoChanging(value As Integer)
    End Sub
    Partial Private Sub OnA_ID_ChoChanged()
    End Sub
    Partial Private Sub OnA_Monto_AbonoChanging(value As Integer)
    End Sub
    Partial Private Sub OnA_Monto_AbonoChanged()
    End Sub
    Partial Private Sub OnA_Info_ValeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnA_Info_ValeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Info_Informe_Barras = CType(Nothing, EntityRef(Of Info_Informe_Barras))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property A_ID() As Integer
		Get
			Return Me._A_ID
		End Get
		Set
			If ((Me._A_ID = value)  _
						= false) Then
				If Me._Info_Informe_Barras.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnA_IDChanging(value)
				Me.SendPropertyChanging
				Me._A_ID = value
				Me.SendPropertyChanged("A_ID")
				Me.OnA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_ID_Cho", DbType:="Int NOT NULL")>  _
	Public Property A_ID_Cho() As Integer
		Get
			Return Me._A_ID_Cho
		End Get
		Set
			If ((Me._A_ID_Cho = value)  _
						= false) Then
				Me.OnA_ID_ChoChanging(value)
				Me.SendPropertyChanging
				Me._A_ID_Cho = value
				Me.SendPropertyChanged("A_ID_Cho")
				Me.OnA_ID_ChoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_Monto_Abono", DbType:="Int NOT NULL")>  _
	Public Property A_Monto_Abono() As Integer
		Get
			Return Me._A_Monto_Abono
		End Get
		Set
			If ((Me._A_Monto_Abono = value)  _
						= false) Then
				Me.OnA_Monto_AbonoChanging(value)
				Me.SendPropertyChanging
				Me._A_Monto_Abono = value
				Me.SendPropertyChanged("A_Monto_Abono")
				Me.OnA_Monto_AbonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_Info_Vale", DbType:="Int")>  _
	Public Property A_Info_Vale() As System.Nullable(Of Integer)
		Get
			Return Me._A_Info_Vale
		End Get
		Set
			If (Me._A_Info_Vale.Equals(value) = false) Then
				Me.OnA_Info_ValeChanging(value)
				Me.SendPropertyChanging
				Me._A_Info_Vale = value
				Me.SendPropertyChanged("A_Info_Vale")
				Me.OnA_Info_ValeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Info_Informe_Barras_A_Abono", Storage:="_Info_Informe_Barras", ThisKey:="A_ID", OtherKey:="Info_ID", IsForeignKey:=true)>  _
	Public Property Info_Informe_Barras() As Info_Informe_Barras
		Get
			Return Me._Info_Informe_Barras.Entity
		End Get
		Set
			Dim previousValue As Info_Informe_Barras = Me._Info_Informe_Barras.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Info_Informe_Barras.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Info_Informe_Barras.Entity = Nothing
					previousValue.A_Abono = Nothing
				End If
				Me._Info_Informe_Barras.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.A_Abono = Me
					Me._A_ID = value.Info_ID
				Else
					Me._A_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Info_Informe_Barras")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ca_Carreras")>  _
Partial Public Class Ca_Carreras
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Ca_ID As Integer
	
	Private _Ca_Carrer As String
	
	Private _Info_Informe_Barras As EntitySet(Of Info_Informe_Barras)
	
	Private _Zo_Zona As EntityRef(Of Zo_Zona)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCa_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCa_IDChanged()
    End Sub
    Partial Private Sub OnCa_CarrerChanging(value As String)
    End Sub
    Partial Private Sub OnCa_CarrerChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Info_Informe_Barras = New EntitySet(Of Info_Informe_Barras)(AddressOf Me.attach_Info_Informe_Barras, AddressOf Me.detach_Info_Informe_Barras)
		Me._Zo_Zona = CType(Nothing, EntityRef(Of Zo_Zona))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ca_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Ca_ID() As Integer
		Get
			Return Me._Ca_ID
		End Get
		Set
			If ((Me._Ca_ID = value)  _
						= false) Then
				Me.OnCa_IDChanging(value)
				Me.SendPropertyChanging
				Me._Ca_ID = value
				Me.SendPropertyChanged("Ca_ID")
				Me.OnCa_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ca_Carrer", DbType:="NVarChar(50)")>  _
	Public Property Ca_Carrer() As String
		Get
			Return Me._Ca_Carrer
		End Get
		Set
			If (String.Equals(Me._Ca_Carrer, value) = false) Then
				Me.OnCa_CarrerChanging(value)
				Me.SendPropertyChanging
				Me._Ca_Carrer = value
				Me.SendPropertyChanged("Ca_Carrer")
				Me.OnCa_CarrerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ca_Carreras_Info_Informe_Barras", Storage:="_Info_Informe_Barras", ThisKey:="Ca_ID", OtherKey:="Info_ID_Carreras")>  _
	Public Property Info_Informe_Barras() As EntitySet(Of Info_Informe_Barras)
		Get
			Return Me._Info_Informe_Barras
		End Get
		Set
			Me._Info_Informe_Barras.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ca_Carreras_Zo_Zona", Storage:="_Zo_Zona", ThisKey:="Ca_ID", OtherKey:="Zo_ID", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property Zo_Zona() As Zo_Zona
		Get
			Return Me._Zo_Zona.Entity
		End Get
		Set
			Dim previousValue As Zo_Zona = Me._Zo_Zona.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Zo_Zona.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Zo_Zona.Entity = Nothing
					previousValue.Ca_Carreras = Nothing
				End If
				Me._Zo_Zona.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.Ca_Carreras = Me
				End If
				Me.SendPropertyChanged("Zo_Zona")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Info_Informe_Barras(ByVal entity As Info_Informe_Barras)
		Me.SendPropertyChanging
		entity.Ca_Carreras = Me
	End Sub
	
	Private Sub detach_Info_Informe_Barras(ByVal entity As Info_Informe_Barras)
		Me.SendPropertyChanging
		entity.Ca_Carreras = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cho_Choferes")>  _
Partial Public Class Cho_Choferes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Cho_Cedula As Integer
	
	Private _Cho_Num_Codigo As Integer
	
	Private _Cho_Nombre As String
	
	Private _Cho_Apellido1 As String
	
	Private _Cho_Apellido2 As String
	
	Private _Cho_Num_folio As Integer
	
	Private _Cho_Boleta As Integer
	
	Private _Cho_Compania As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCho_CedulaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_CedulaChanged()
    End Sub
    Partial Private Sub OnCho_Num_CodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_Num_CodigoChanged()
    End Sub
    Partial Private Sub OnCho_NombreChanging(value As String)
    End Sub
    Partial Private Sub OnCho_NombreChanged()
    End Sub
    Partial Private Sub OnCho_Apellido1Changing(value As String)
    End Sub
    Partial Private Sub OnCho_Apellido1Changed()
    End Sub
    Partial Private Sub OnCho_Apellido2Changing(value As String)
    End Sub
    Partial Private Sub OnCho_Apellido2Changed()
    End Sub
    Partial Private Sub OnCho_Num_folioChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_Num_folioChanged()
    End Sub
    Partial Private Sub OnCho_BoletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_BoletaChanged()
    End Sub
    Partial Private Sub OnCho_CompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnCho_CompaniaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Cedula", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Cho_Cedula() As Integer
		Get
			Return Me._Cho_Cedula
		End Get
		Set
			If ((Me._Cho_Cedula = value)  _
						= false) Then
				Me.OnCho_CedulaChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Cedula = value
				Me.SendPropertyChanged("Cho_Cedula")
				Me.OnCho_CedulaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Num_Codigo", DbType:="Int NOT NULL")>  _
	Public Property Cho_Num_Codigo() As Integer
		Get
			Return Me._Cho_Num_Codigo
		End Get
		Set
			If ((Me._Cho_Num_Codigo = value)  _
						= false) Then
				Me.OnCho_Num_CodigoChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Num_Codigo = value
				Me.SendPropertyChanged("Cho_Num_Codigo")
				Me.OnCho_Num_CodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Nombre", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Nombre() As String
		Get
			Return Me._Cho_Nombre
		End Get
		Set
			If (String.Equals(Me._Cho_Nombre, value) = false) Then
				Me.OnCho_NombreChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Nombre = value
				Me.SendPropertyChanged("Cho_Nombre")
				Me.OnCho_NombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Apellido1", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Apellido1() As String
		Get
			Return Me._Cho_Apellido1
		End Get
		Set
			If (String.Equals(Me._Cho_Apellido1, value) = false) Then
				Me.OnCho_Apellido1Changing(value)
				Me.SendPropertyChanging
				Me._Cho_Apellido1 = value
				Me.SendPropertyChanged("Cho_Apellido1")
				Me.OnCho_Apellido1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Apellido2", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Apellido2() As String
		Get
			Return Me._Cho_Apellido2
		End Get
		Set
			If (String.Equals(Me._Cho_Apellido2, value) = false) Then
				Me.OnCho_Apellido2Changing(value)
				Me.SendPropertyChanging
				Me._Cho_Apellido2 = value
				Me.SendPropertyChanged("Cho_Apellido2")
				Me.OnCho_Apellido2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Num_folio", DbType:="Int NOT NULL")>  _
	Public Property Cho_Num_folio() As Integer
		Get
			Return Me._Cho_Num_folio
		End Get
		Set
			If ((Me._Cho_Num_folio = value)  _
						= false) Then
				Me.OnCho_Num_folioChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Num_folio = value
				Me.SendPropertyChanged("Cho_Num_folio")
				Me.OnCho_Num_folioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Boleta", DbType:="Int NOT NULL")>  _
	Public Property Cho_Boleta() As Integer
		Get
			Return Me._Cho_Boleta
		End Get
		Set
			If ((Me._Cho_Boleta = value)  _
						= false) Then
				Me.OnCho_BoletaChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Boleta = value
				Me.SendPropertyChanged("Cho_Boleta")
				Me.OnCho_BoletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Compania", DbType:="NVarChar(20)")>  _
	Public Property Cho_Compania() As String
		Get
			Return Me._Cho_Compania
		End Get
		Set
			If (String.Equals(Me._Cho_Compania, value) = false) Then
				Me.OnCho_CompaniaChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Compania = value
				Me.SendPropertyChanged("Cho_Compania")
				Me.OnCho_CompaniaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Info_Informe_Barras")>  _
Partial Public Class Info_Informe_Barras
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Info_ID As Integer
	
	Private _Info_ID_Carreras As System.Nullable(Of Integer)
	
	Private _Info_ID_Chofer As System.Nullable(Of Integer)
	
	Private _Info_Fecha_Hora As System.Nullable(Of Date)
	
	Private _Info_Ruta As System.Nullable(Of Integer)
	
	Private _Info_Unidad As System.Nullable(Of Integer)
	
	Private _Info_Cod_Usuario As System.Nullable(Of Integer)
	
	Private _Info_Boleta As System.Nullable(Of Integer)
	
	Private _Info_Monto_Entregar As System.Nullable(Of Integer)
	
	Private _Info_Monto_Entregado As System.Nullable(Of Integer)
	
	Private _Info_Sobrante As System.Nullable(Of Double)
	
	Private _Info_Vales As System.Nullable(Of Double)
	
	Private _Info_Adultos_Mayores As System.Nullable(Of Integer)
	
	Private _A_Abono As EntityRef(Of A_Abono)
	
	Private _Pla_Planilla As EntitySet(Of Pla_Planilla)
	
	Private _Ca_Carreras As EntityRef(Of Ca_Carreras)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnInfo_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnInfo_IDChanged()
    End Sub
    Partial Private Sub OnInfo_ID_CarrerasChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_ID_CarrerasChanged()
    End Sub
    Partial Private Sub OnInfo_ID_ChoferChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_ID_ChoferChanged()
    End Sub
    Partial Private Sub OnInfo_Fecha_HoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInfo_Fecha_HoraChanged()
    End Sub
    Partial Private Sub OnInfo_RutaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_RutaChanged()
    End Sub
    Partial Private Sub OnInfo_UnidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_UnidadChanged()
    End Sub
    Partial Private Sub OnInfo_Cod_UsuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_Cod_UsuarioChanged()
    End Sub
    Partial Private Sub OnInfo_BoletaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_BoletaChanged()
    End Sub
    Partial Private Sub OnInfo_Monto_EntregarChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_Monto_EntregarChanged()
    End Sub
    Partial Private Sub OnInfo_Monto_EntregadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_Monto_EntregadoChanged()
    End Sub
    Partial Private Sub OnInfo_SobranteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnInfo_SobranteChanged()
    End Sub
    Partial Private Sub OnInfo_ValesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnInfo_ValesChanged()
    End Sub
    Partial Private Sub OnInfo_Adultos_MayoresChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_Adultos_MayoresChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._A_Abono = CType(Nothing, EntityRef(Of A_Abono))
		Me._Pla_Planilla = New EntitySet(Of Pla_Planilla)(AddressOf Me.attach_Pla_Planilla, AddressOf Me.detach_Pla_Planilla)
		Me._Ca_Carreras = CType(Nothing, EntityRef(Of Ca_Carreras))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Info_ID() As Integer
		Get
			Return Me._Info_ID
		End Get
		Set
			If ((Me._Info_ID = value)  _
						= false) Then
				Me.OnInfo_IDChanging(value)
				Me.SendPropertyChanging
				Me._Info_ID = value
				Me.SendPropertyChanged("Info_ID")
				Me.OnInfo_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_ID_Carreras", DbType:="Int")>  _
	Public Property Info_ID_Carreras() As System.Nullable(Of Integer)
		Get
			Return Me._Info_ID_Carreras
		End Get
		Set
			If (Me._Info_ID_Carreras.Equals(value) = false) Then
				If Me._Ca_Carreras.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnInfo_ID_CarrerasChanging(value)
				Me.SendPropertyChanging
				Me._Info_ID_Carreras = value
				Me.SendPropertyChanged("Info_ID_Carreras")
				Me.OnInfo_ID_CarrerasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_ID_Chofer", DbType:="Int")>  _
	Public Property Info_ID_Chofer() As System.Nullable(Of Integer)
		Get
			Return Me._Info_ID_Chofer
		End Get
		Set
			If (Me._Info_ID_Chofer.Equals(value) = false) Then
				Me.OnInfo_ID_ChoferChanging(value)
				Me.SendPropertyChanging
				Me._Info_ID_Chofer = value
				Me.SendPropertyChanged("Info_ID_Chofer")
				Me.OnInfo_ID_ChoferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Fecha_Hora", DbType:="DateTime")>  _
	Public Property Info_Fecha_Hora() As System.Nullable(Of Date)
		Get
			Return Me._Info_Fecha_Hora
		End Get
		Set
			If (Me._Info_Fecha_Hora.Equals(value) = false) Then
				Me.OnInfo_Fecha_HoraChanging(value)
				Me.SendPropertyChanging
				Me._Info_Fecha_Hora = value
				Me.SendPropertyChanged("Info_Fecha_Hora")
				Me.OnInfo_Fecha_HoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Ruta", DbType:="Int")>  _
	Public Property Info_Ruta() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Ruta
		End Get
		Set
			If (Me._Info_Ruta.Equals(value) = false) Then
				Me.OnInfo_RutaChanging(value)
				Me.SendPropertyChanging
				Me._Info_Ruta = value
				Me.SendPropertyChanged("Info_Ruta")
				Me.OnInfo_RutaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Unidad", DbType:="Int")>  _
	Public Property Info_Unidad() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Unidad
		End Get
		Set
			If (Me._Info_Unidad.Equals(value) = false) Then
				Me.OnInfo_UnidadChanging(value)
				Me.SendPropertyChanging
				Me._Info_Unidad = value
				Me.SendPropertyChanged("Info_Unidad")
				Me.OnInfo_UnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Cod_Usuario", DbType:="Int")>  _
	Public Property Info_Cod_Usuario() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Cod_Usuario
		End Get
		Set
			If (Me._Info_Cod_Usuario.Equals(value) = false) Then
				Me.OnInfo_Cod_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Info_Cod_Usuario = value
				Me.SendPropertyChanged("Info_Cod_Usuario")
				Me.OnInfo_Cod_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Boleta", DbType:="Int")>  _
	Public Property Info_Boleta() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Boleta
		End Get
		Set
			If (Me._Info_Boleta.Equals(value) = false) Then
				Me.OnInfo_BoletaChanging(value)
				Me.SendPropertyChanging
				Me._Info_Boleta = value
				Me.SendPropertyChanged("Info_Boleta")
				Me.OnInfo_BoletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Monto_Entregar", DbType:="Int")>  _
	Public Property Info_Monto_Entregar() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Monto_Entregar
		End Get
		Set
			If (Me._Info_Monto_Entregar.Equals(value) = false) Then
				Me.OnInfo_Monto_EntregarChanging(value)
				Me.SendPropertyChanging
				Me._Info_Monto_Entregar = value
				Me.SendPropertyChanged("Info_Monto_Entregar")
				Me.OnInfo_Monto_EntregarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Monto_Entregado", DbType:="Int")>  _
	Public Property Info_Monto_Entregado() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Monto_Entregado
		End Get
		Set
			If (Me._Info_Monto_Entregado.Equals(value) = false) Then
				Me.OnInfo_Monto_EntregadoChanging(value)
				Me.SendPropertyChanging
				Me._Info_Monto_Entregado = value
				Me.SendPropertyChanged("Info_Monto_Entregado")
				Me.OnInfo_Monto_EntregadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Sobrante", DbType:="Float")>  _
	Public Property Info_Sobrante() As System.Nullable(Of Double)
		Get
			Return Me._Info_Sobrante
		End Get
		Set
			If (Me._Info_Sobrante.Equals(value) = false) Then
				Me.OnInfo_SobranteChanging(value)
				Me.SendPropertyChanging
				Me._Info_Sobrante = value
				Me.SendPropertyChanged("Info_Sobrante")
				Me.OnInfo_SobranteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Vales", DbType:="Float")>  _
	Public Property Info_Vales() As System.Nullable(Of Double)
		Get
			Return Me._Info_Vales
		End Get
		Set
			If (Me._Info_Vales.Equals(value) = false) Then
				Me.OnInfo_ValesChanging(value)
				Me.SendPropertyChanging
				Me._Info_Vales = value
				Me.SendPropertyChanged("Info_Vales")
				Me.OnInfo_ValesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_Adultos_Mayores", DbType:="Int")>  _
	Public Property Info_Adultos_Mayores() As System.Nullable(Of Integer)
		Get
			Return Me._Info_Adultos_Mayores
		End Get
		Set
			If (Me._Info_Adultos_Mayores.Equals(value) = false) Then
				Me.OnInfo_Adultos_MayoresChanging(value)
				Me.SendPropertyChanging
				Me._Info_Adultos_Mayores = value
				Me.SendPropertyChanged("Info_Adultos_Mayores")
				Me.OnInfo_Adultos_MayoresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Info_Informe_Barras_A_Abono", Storage:="_A_Abono", ThisKey:="Info_ID", OtherKey:="A_ID", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property A_Abono() As A_Abono
		Get
			Return Me._A_Abono.Entity
		End Get
		Set
			Dim previousValue As A_Abono = Me._A_Abono.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._A_Abono.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._A_Abono.Entity = Nothing
					previousValue.Info_Informe_Barras = Nothing
				End If
				Me._A_Abono.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.Info_Informe_Barras = Me
				End If
				Me.SendPropertyChanged("A_Abono")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Info_Informe_Barras_Pla_Planilla", Storage:="_Pla_Planilla", ThisKey:="Info_ID", OtherKey:="Pla_ID_Informes")>  _
	Public Property Pla_Planilla() As EntitySet(Of Pla_Planilla)
		Get
			Return Me._Pla_Planilla
		End Get
		Set
			Me._Pla_Planilla.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ca_Carreras_Info_Informe_Barras", Storage:="_Ca_Carreras", ThisKey:="Info_ID_Carreras", OtherKey:="Ca_ID", IsForeignKey:=true)>  _
	Public Property Ca_Carreras() As Ca_Carreras
		Get
			Return Me._Ca_Carreras.Entity
		End Get
		Set
			Dim previousValue As Ca_Carreras = Me._Ca_Carreras.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Ca_Carreras.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Ca_Carreras.Entity = Nothing
					previousValue.Info_Informe_Barras.Remove(Me)
				End If
				Me._Ca_Carreras.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Info_Informe_Barras.Add(Me)
					Me._Info_ID_Carreras = value.Ca_ID
				Else
					Me._Info_ID_Carreras = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Ca_Carreras")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Pla_Planilla(ByVal entity As Pla_Planilla)
		Me.SendPropertyChanging
		entity.Info_Informe_Barras = Me
	End Sub
	
	Private Sub detach_Pla_Planilla(ByVal entity As Pla_Planilla)
		Me.SendPropertyChanging
		entity.Info_Informe_Barras = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Pla_Planilla")>  _
Partial Public Class Pla_Planilla
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Plan_ID As Integer
	
	Private _Pla_ID_Informes As System.Nullable(Of Integer)
	
	Private _Pla_Saldo_Vales As System.Nullable(Of Double)
	
	Private _Pla_Saldo_Sobrantes As System.Nullable(Of Double)
	
	Private _Pla_Diferencia As System.Nullable(Of Double)
	
	Private _Pla_Bonificacion As System.Nullable(Of Double)
	
	Private _Pla_Monto_Reinte As System.Nullable(Of Double)
	
	Private _Pla_Monto_Rebajar As System.Nullable(Of Double)
	
	Private _Info_Informe_Barras As EntityRef(Of Info_Informe_Barras)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPlan_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlan_IDChanged()
    End Sub
    Partial Private Sub OnPla_ID_InformesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPla_ID_InformesChanged()
    End Sub
    Partial Private Sub OnPla_Saldo_ValesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Saldo_ValesChanged()
    End Sub
    Partial Private Sub OnPla_Saldo_SobrantesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Saldo_SobrantesChanged()
    End Sub
    Partial Private Sub OnPla_DiferenciaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_DiferenciaChanged()
    End Sub
    Partial Private Sub OnPla_BonificacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_BonificacionChanged()
    End Sub
    Partial Private Sub OnPla_Monto_ReinteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Monto_ReinteChanged()
    End Sub
    Partial Private Sub OnPla_Monto_RebajarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Monto_RebajarChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Info_Informe_Barras = CType(Nothing, EntityRef(Of Info_Informe_Barras))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Plan_ID() As Integer
		Get
			Return Me._Plan_ID
		End Get
		Set
			If ((Me._Plan_ID = value)  _
						= false) Then
				Me.OnPlan_IDChanging(value)
				Me.SendPropertyChanging
				Me._Plan_ID = value
				Me.SendPropertyChanged("Plan_ID")
				Me.OnPlan_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_ID_Informes", DbType:="Int")>  _
	Public Property Pla_ID_Informes() As System.Nullable(Of Integer)
		Get
			Return Me._Pla_ID_Informes
		End Get
		Set
			If (Me._Pla_ID_Informes.Equals(value) = false) Then
				If Me._Info_Informe_Barras.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPla_ID_InformesChanging(value)
				Me.SendPropertyChanging
				Me._Pla_ID_Informes = value
				Me.SendPropertyChanged("Pla_ID_Informes")
				Me.OnPla_ID_InformesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Saldo_Vales", DbType:="Float")>  _
	Public Property Pla_Saldo_Vales() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Saldo_Vales
		End Get
		Set
			If (Me._Pla_Saldo_Vales.Equals(value) = false) Then
				Me.OnPla_Saldo_ValesChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Saldo_Vales = value
				Me.SendPropertyChanged("Pla_Saldo_Vales")
				Me.OnPla_Saldo_ValesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Saldo_Sobrantes", DbType:="Float")>  _
	Public Property Pla_Saldo_Sobrantes() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Saldo_Sobrantes
		End Get
		Set
			If (Me._Pla_Saldo_Sobrantes.Equals(value) = false) Then
				Me.OnPla_Saldo_SobrantesChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Saldo_Sobrantes = value
				Me.SendPropertyChanged("Pla_Saldo_Sobrantes")
				Me.OnPla_Saldo_SobrantesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Diferencia", DbType:="Float")>  _
	Public Property Pla_Diferencia() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Diferencia
		End Get
		Set
			If (Me._Pla_Diferencia.Equals(value) = false) Then
				Me.OnPla_DiferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Diferencia = value
				Me.SendPropertyChanged("Pla_Diferencia")
				Me.OnPla_DiferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Bonificacion", DbType:="Float")>  _
	Public Property Pla_Bonificacion() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Bonificacion
		End Get
		Set
			If (Me._Pla_Bonificacion.Equals(value) = false) Then
				Me.OnPla_BonificacionChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Bonificacion = value
				Me.SendPropertyChanged("Pla_Bonificacion")
				Me.OnPla_BonificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Monto_Reinte", DbType:="Float")>  _
	Public Property Pla_Monto_Reinte() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Monto_Reinte
		End Get
		Set
			If (Me._Pla_Monto_Reinte.Equals(value) = false) Then
				Me.OnPla_Monto_ReinteChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Monto_Reinte = value
				Me.SendPropertyChanged("Pla_Monto_Reinte")
				Me.OnPla_Monto_ReinteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Monto_Rebajar", DbType:="Float")>  _
	Public Property Pla_Monto_Rebajar() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Monto_Rebajar
		End Get
		Set
			If (Me._Pla_Monto_Rebajar.Equals(value) = false) Then
				Me.OnPla_Monto_RebajarChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Monto_Rebajar = value
				Me.SendPropertyChanged("Pla_Monto_Rebajar")
				Me.OnPla_Monto_RebajarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Info_Informe_Barras_Pla_Planilla", Storage:="_Info_Informe_Barras", ThisKey:="Pla_ID_Informes", OtherKey:="Info_ID", IsForeignKey:=true)>  _
	Public Property Info_Informe_Barras() As Info_Informe_Barras
		Get
			Return Me._Info_Informe_Barras.Entity
		End Get
		Set
			Dim previousValue As Info_Informe_Barras = Me._Info_Informe_Barras.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Info_Informe_Barras.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Info_Informe_Barras.Entity = Nothing
					previousValue.Pla_Planilla.Remove(Me)
				End If
				Me._Info_Informe_Barras.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Pla_Planilla.Add(Me)
					Me._Pla_ID_Informes = value.Info_ID
				Else
					Me._Pla_ID_Informes = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Info_Informe_Barras")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.U_Usuario")>  _
Partial Public Class U_Usuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _U_ID As Integer
	
	Private _U_Usuario As String
	
	Private _U_Contrasena As String
	
	Private _U_ID_Zona As System.Nullable(Of Integer)
	
	Private _Zo_Zona As EntityRef(Of Zo_Zona)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnU_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnU_IDChanged()
    End Sub
    Partial Private Sub OnU_UsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnU_UsuarioChanged()
    End Sub
    Partial Private Sub OnU_ContrasenaChanging(value As String)
    End Sub
    Partial Private Sub OnU_ContrasenaChanged()
    End Sub
    Partial Private Sub OnU_ID_ZonaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnU_ID_ZonaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Zo_Zona = CType(Nothing, EntityRef(Of Zo_Zona))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property U_ID() As Integer
		Get
			Return Me._U_ID
		End Get
		Set
			If ((Me._U_ID = value)  _
						= false) Then
				Me.OnU_IDChanging(value)
				Me.SendPropertyChanging
				Me._U_ID = value
				Me.SendPropertyChanged("U_ID")
				Me.OnU_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U_Usuario", DbType:="NVarChar(30)")>  _
	Public Property U_Usuario() As String
		Get
			Return Me._U_Usuario
		End Get
		Set
			If (String.Equals(Me._U_Usuario, value) = false) Then
				Me.OnU_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._U_Usuario = value
				Me.SendPropertyChanged("U_Usuario")
				Me.OnU_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U_Contrasena", DbType:="NVarChar(30)")>  _
	Public Property U_Contrasena() As String
		Get
			Return Me._U_Contrasena
		End Get
		Set
			If (String.Equals(Me._U_Contrasena, value) = false) Then
				Me.OnU_ContrasenaChanging(value)
				Me.SendPropertyChanging
				Me._U_Contrasena = value
				Me.SendPropertyChanged("U_Contrasena")
				Me.OnU_ContrasenaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U_ID_Zona", DbType:="Int")>  _
	Public Property U_ID_Zona() As System.Nullable(Of Integer)
		Get
			Return Me._U_ID_Zona
		End Get
		Set
			If (Me._U_ID_Zona.Equals(value) = false) Then
				If Me._Zo_Zona.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnU_ID_ZonaChanging(value)
				Me.SendPropertyChanging
				Me._U_ID_Zona = value
				Me.SendPropertyChanged("U_ID_Zona")
				Me.OnU_ID_ZonaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Zo_Zona_U_Usuario", Storage:="_Zo_Zona", ThisKey:="U_ID_Zona", OtherKey:="Zo_ID", IsForeignKey:=true)>  _
	Public Property Zo_Zona() As Zo_Zona
		Get
			Return Me._Zo_Zona.Entity
		End Get
		Set
			Dim previousValue As Zo_Zona = Me._Zo_Zona.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Zo_Zona.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Zo_Zona.Entity = Nothing
					previousValue.U_Usuario.Remove(Me)
				End If
				Me._Zo_Zona.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.U_Usuario.Add(Me)
					Me._U_ID_Zona = value.Zo_ID
				Else
					Me._U_ID_Zona = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Zo_Zona")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Zo_Zona")>  _
Partial Public Class Zo_Zona
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Zo_ID As Integer
	
	Private _Zo_Zona As String
	
	Private _Zo_ID_Carrera As System.Nullable(Of Integer)
	
	Private _U_Usuario As EntitySet(Of U_Usuario)
	
	Private _Ca_Carreras As EntityRef(Of Ca_Carreras)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnZo_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnZo_IDChanged()
    End Sub
    Partial Private Sub OnZo_ZonaChanging(value As String)
    End Sub
    Partial Private Sub OnZo_ZonaChanged()
    End Sub
    Partial Private Sub OnZo_ID_CarreraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZo_ID_CarreraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._U_Usuario = New EntitySet(Of U_Usuario)(AddressOf Me.attach_U_Usuario, AddressOf Me.detach_U_Usuario)
		Me._Ca_Carreras = CType(Nothing, EntityRef(Of Ca_Carreras))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zo_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Zo_ID() As Integer
		Get
			Return Me._Zo_ID
		End Get
		Set
			If ((Me._Zo_ID = value)  _
						= false) Then
				If Me._Ca_Carreras.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnZo_IDChanging(value)
				Me.SendPropertyChanging
				Me._Zo_ID = value
				Me.SendPropertyChanged("Zo_ID")
				Me.OnZo_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zo_Zona", DbType:="NVarChar(20)")>  _
	Public Property Zo_Zona() As String
		Get
			Return Me._Zo_Zona
		End Get
		Set
			If (String.Equals(Me._Zo_Zona, value) = false) Then
				Me.OnZo_ZonaChanging(value)
				Me.SendPropertyChanging
				Me._Zo_Zona = value
				Me.SendPropertyChanged("Zo_Zona")
				Me.OnZo_ZonaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zo_ID_Carrera", DbType:="Int")>  _
	Public Property Zo_ID_Carrera() As System.Nullable(Of Integer)
		Get
			Return Me._Zo_ID_Carrera
		End Get
		Set
			If (Me._Zo_ID_Carrera.Equals(value) = false) Then
				Me.OnZo_ID_CarreraChanging(value)
				Me.SendPropertyChanging
				Me._Zo_ID_Carrera = value
				Me.SendPropertyChanged("Zo_ID_Carrera")
				Me.OnZo_ID_CarreraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Zo_Zona_U_Usuario", Storage:="_U_Usuario", ThisKey:="Zo_ID", OtherKey:="U_ID_Zona")>  _
	Public Property U_Usuario() As EntitySet(Of U_Usuario)
		Get
			Return Me._U_Usuario
		End Get
		Set
			Me._U_Usuario.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Ca_Carreras_Zo_Zona", Storage:="_Ca_Carreras", ThisKey:="Zo_ID", OtherKey:="Ca_ID", IsForeignKey:=true)>  _
	Public Property Ca_Carreras() As Ca_Carreras
		Get
			Return Me._Ca_Carreras.Entity
		End Get
		Set
			Dim previousValue As Ca_Carreras = Me._Ca_Carreras.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Ca_Carreras.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Ca_Carreras.Entity = Nothing
					previousValue.Zo_Zona = Nothing
				End If
				Me._Ca_Carreras.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Zo_Zona = Me
					Me._Zo_ID = value.Ca_ID
				Else
					Me._Zo_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Ca_Carreras")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_U_Usuario(ByVal entity As U_Usuario)
		Me.SendPropertyChanging
		entity.Zo_Zona = Me
	End Sub
	
	Private Sub detach_U_Usuario(ByVal entity As U_Usuario)
		Me.SendPropertyChanging
		entity.Zo_Zona = Nothing
	End Sub
End Class
