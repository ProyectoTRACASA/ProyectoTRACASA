'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SistemaControl")>  _
Partial Public Class SistemaControlDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertA_Abono(instance As A_Abono)
    End Sub
  Partial Private Sub UpdateA_Abono(instance As A_Abono)
    End Sub
  Partial Private Sub DeleteA_Abono(instance As A_Abono)
    End Sub
  Partial Private Sub InsertCho_Choferes(instance As Cho_Choferes)
    End Sub
  Partial Private Sub UpdateCho_Choferes(instance As Cho_Choferes)
    End Sub
  Partial Private Sub DeleteCho_Choferes(instance As Cho_Choferes)
    End Sub
  Partial Private Sub InsertInforme_Barras(instance As Informe_Barras)
    End Sub
  Partial Private Sub UpdateInforme_Barras(instance As Informe_Barras)
    End Sub
  Partial Private Sub DeleteInforme_Barras(instance As Informe_Barras)
    End Sub
  Partial Private Sub InsertPlanilla(instance As Planilla)
    End Sub
  Partial Private Sub UpdatePlanilla(instance As Planilla)
    End Sub
  Partial Private Sub DeletePlanilla(instance As Planilla)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.PROYECTO_TRACASA.My.MySettings.Default.SistemaControlConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property A_Abono() As System.Data.Linq.Table(Of A_Abono)
		Get
			Return Me.GetTable(Of A_Abono)
		End Get
	End Property
	
	Public ReadOnly Property Cho_Choferes() As System.Data.Linq.Table(Of Cho_Choferes)
		Get
			Return Me.GetTable(Of Cho_Choferes)
		End Get
	End Property
	
	Public ReadOnly Property Informe_Barras() As System.Data.Linq.Table(Of Informe_Barras)
		Get
			Return Me.GetTable(Of Informe_Barras)
		End Get
	End Property
	
	Public ReadOnly Property Planilla() As System.Data.Linq.Table(Of Planilla)
		Get
			Return Me.GetTable(Of Planilla)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.A_Abono")>  _
Partial Public Class A_Abono
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _A_ID As Integer
	
	Private _A_Cedula_Cho As Integer
	
	Private _A_Monto_Abono As Integer
	
	Private _A_Info_Vale As System.Nullable(Of Integer)
	
	Private _Cho_Choferes As EntityRef(Of Cho_Choferes)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnA_IDChanged()
    End Sub
    Partial Private Sub OnA_Cedula_ChoChanging(value As Integer)
    End Sub
    Partial Private Sub OnA_Cedula_ChoChanged()
    End Sub
    Partial Private Sub OnA_Monto_AbonoChanging(value As Integer)
    End Sub
    Partial Private Sub OnA_Monto_AbonoChanged()
    End Sub
    Partial Private Sub OnA_Info_ValeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnA_Info_ValeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Cho_Choferes = CType(Nothing, EntityRef(Of Cho_Choferes))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property A_ID() As Integer
		Get
			Return Me._A_ID
		End Get
		Set
			If ((Me._A_ID = value)  _
						= false) Then
				Me.OnA_IDChanging(value)
				Me.SendPropertyChanging
				Me._A_ID = value
				Me.SendPropertyChanged("A_ID")
				Me.OnA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_Cedula_Cho", DbType:="Int NOT NULL")>  _
	Public Property A_Cedula_Cho() As Integer
		Get
			Return Me._A_Cedula_Cho
		End Get
		Set
			If ((Me._A_Cedula_Cho = value)  _
						= false) Then
				If Me._Cho_Choferes.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnA_Cedula_ChoChanging(value)
				Me.SendPropertyChanging
				Me._A_Cedula_Cho = value
				Me.SendPropertyChanged("A_Cedula_Cho")
				Me.OnA_Cedula_ChoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_Monto_Abono", DbType:="Int NOT NULL")>  _
	Public Property A_Monto_Abono() As Integer
		Get
			Return Me._A_Monto_Abono
		End Get
		Set
			If ((Me._A_Monto_Abono = value)  _
						= false) Then
				Me.OnA_Monto_AbonoChanging(value)
				Me.SendPropertyChanging
				Me._A_Monto_Abono = value
				Me.SendPropertyChanged("A_Monto_Abono")
				Me.OnA_Monto_AbonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_Info_Vale", DbType:="Int")>  _
	Public Property A_Info_Vale() As System.Nullable(Of Integer)
		Get
			Return Me._A_Info_Vale
		End Get
		Set
			If (Me._A_Info_Vale.Equals(value) = false) Then
				Me.OnA_Info_ValeChanging(value)
				Me.SendPropertyChanging
				Me._A_Info_Vale = value
				Me.SendPropertyChanged("A_Info_Vale")
				Me.OnA_Info_ValeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cho_Choferes_A_Abono", Storage:="_Cho_Choferes", ThisKey:="A_Cedula_Cho", OtherKey:="Cho_Cedula", IsForeignKey:=true)>  _
	Public Property Cho_Choferes() As Cho_Choferes
		Get
			Return Me._Cho_Choferes.Entity
		End Get
		Set
			Dim previousValue As Cho_Choferes = Me._Cho_Choferes.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Cho_Choferes.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Cho_Choferes.Entity = Nothing
					previousValue.A_Abono.Remove(Me)
				End If
				Me._Cho_Choferes.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.A_Abono.Add(Me)
					Me._A_Cedula_Cho = value.Cho_Cedula
				Else
					Me._A_Cedula_Cho = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Cho_Choferes")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cho_Choferes")>  _
Partial Public Class Cho_Choferes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Cho_Cedula As Integer
	
	Private _Cho_Num_Codigo As Integer
	
	Private _Cho_Nombre As String
	
	Private _Cho_Apellido1 As String
	
	Private _Cho_Apellido2 As String
	
	Private _Cho_Num_folio As Integer
	
	Private _Cho_Boleta As Integer
	
	Private _Cho_Compania As String
	
	Private _A_Abono As EntitySet(Of A_Abono)
	
	Private _Informe_Barras As EntitySet(Of Informe_Barras)
	
	Private _Planilla As EntitySet(Of Planilla)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCho_CedulaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_CedulaChanged()
    End Sub
    Partial Private Sub OnCho_Num_CodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_Num_CodigoChanged()
    End Sub
    Partial Private Sub OnCho_NombreChanging(value As String)
    End Sub
    Partial Private Sub OnCho_NombreChanged()
    End Sub
    Partial Private Sub OnCho_Apellido1Changing(value As String)
    End Sub
    Partial Private Sub OnCho_Apellido1Changed()
    End Sub
    Partial Private Sub OnCho_Apellido2Changing(value As String)
    End Sub
    Partial Private Sub OnCho_Apellido2Changed()
    End Sub
    Partial Private Sub OnCho_Num_folioChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_Num_folioChanged()
    End Sub
    Partial Private Sub OnCho_BoletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCho_BoletaChanged()
    End Sub
    Partial Private Sub OnCho_CompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnCho_CompaniaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._A_Abono = New EntitySet(Of A_Abono)(AddressOf Me.attach_A_Abono, AddressOf Me.detach_A_Abono)
		Me._Informe_Barras = New EntitySet(Of Informe_Barras)(AddressOf Me.attach_Informe_Barras, AddressOf Me.detach_Informe_Barras)
		Me._Planilla = New EntitySet(Of Planilla)(AddressOf Me.attach_Planilla, AddressOf Me.detach_Planilla)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Cedula", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Cho_Cedula() As Integer
		Get
			Return Me._Cho_Cedula
		End Get
		Set
			If ((Me._Cho_Cedula = value)  _
						= false) Then
				Me.OnCho_CedulaChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Cedula = value
				Me.SendPropertyChanged("Cho_Cedula")
				Me.OnCho_CedulaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Num_Codigo", DbType:="Int NOT NULL")>  _
	Public Property Cho_Num_Codigo() As Integer
		Get
			Return Me._Cho_Num_Codigo
		End Get
		Set
			If ((Me._Cho_Num_Codigo = value)  _
						= false) Then
				Me.OnCho_Num_CodigoChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Num_Codigo = value
				Me.SendPropertyChanged("Cho_Num_Codigo")
				Me.OnCho_Num_CodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Nombre", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Nombre() As String
		Get
			Return Me._Cho_Nombre
		End Get
		Set
			If (String.Equals(Me._Cho_Nombre, value) = false) Then
				Me.OnCho_NombreChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Nombre = value
				Me.SendPropertyChanged("Cho_Nombre")
				Me.OnCho_NombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Apellido1", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Apellido1() As String
		Get
			Return Me._Cho_Apellido1
		End Get
		Set
			If (String.Equals(Me._Cho_Apellido1, value) = false) Then
				Me.OnCho_Apellido1Changing(value)
				Me.SendPropertyChanging
				Me._Cho_Apellido1 = value
				Me.SendPropertyChanged("Cho_Apellido1")
				Me.OnCho_Apellido1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Apellido2", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Apellido2() As String
		Get
			Return Me._Cho_Apellido2
		End Get
		Set
			If (String.Equals(Me._Cho_Apellido2, value) = false) Then
				Me.OnCho_Apellido2Changing(value)
				Me.SendPropertyChanging
				Me._Cho_Apellido2 = value
				Me.SendPropertyChanged("Cho_Apellido2")
				Me.OnCho_Apellido2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Num_folio", DbType:="Int NOT NULL")>  _
	Public Property Cho_Num_folio() As Integer
		Get
			Return Me._Cho_Num_folio
		End Get
		Set
			If ((Me._Cho_Num_folio = value)  _
						= false) Then
				Me.OnCho_Num_folioChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Num_folio = value
				Me.SendPropertyChanged("Cho_Num_folio")
				Me.OnCho_Num_folioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Boleta", DbType:="Int NOT NULL")>  _
	Public Property Cho_Boleta() As Integer
		Get
			Return Me._Cho_Boleta
		End Get
		Set
			If ((Me._Cho_Boleta = value)  _
						= false) Then
				Me.OnCho_BoletaChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Boleta = value
				Me.SendPropertyChanged("Cho_Boleta")
				Me.OnCho_BoletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cho_Compania", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Cho_Compania() As String
		Get
			Return Me._Cho_Compania
		End Get
		Set
			If (String.Equals(Me._Cho_Compania, value) = false) Then
				Me.OnCho_CompaniaChanging(value)
				Me.SendPropertyChanging
				Me._Cho_Compania = value
				Me.SendPropertyChanged("Cho_Compania")
				Me.OnCho_CompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cho_Choferes_A_Abono", Storage:="_A_Abono", ThisKey:="Cho_Cedula", OtherKey:="A_Cedula_Cho")>  _
	Public Property A_Abono() As EntitySet(Of A_Abono)
		Get
			Return Me._A_Abono
		End Get
		Set
			Me._A_Abono.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cho_Choferes_Informe_Barras", Storage:="_Informe_Barras", ThisKey:="Cho_Cedula", OtherKey:="Info_ID_Chofer")>  _
	Public Property Informe_Barras() As EntitySet(Of Informe_Barras)
		Get
			Return Me._Informe_Barras
		End Get
		Set
			Me._Informe_Barras.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cho_Choferes_Planilla", Storage:="_Planilla", ThisKey:="Cho_Cedula", OtherKey:="Pla_Cedula_Cho")>  _
	Public Property Planilla() As EntitySet(Of Planilla)
		Get
			Return Me._Planilla
		End Get
		Set
			Me._Planilla.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_A_Abono(ByVal entity As A_Abono)
		Me.SendPropertyChanging
		entity.Cho_Choferes = Me
	End Sub
	
	Private Sub detach_A_Abono(ByVal entity As A_Abono)
		Me.SendPropertyChanging
		entity.Cho_Choferes = Nothing
	End Sub
	
	Private Sub attach_Informe_Barras(ByVal entity As Informe_Barras)
		Me.SendPropertyChanging
		entity.Cho_Choferes = Me
	End Sub
	
	Private Sub detach_Informe_Barras(ByVal entity As Informe_Barras)
		Me.SendPropertyChanging
		entity.Cho_Choferes = Nothing
	End Sub
	
	Private Sub attach_Planilla(ByVal entity As Planilla)
		Me.SendPropertyChanging
		entity.Cho_Choferes = Me
	End Sub
	
	Private Sub detach_Planilla(ByVal entity As Planilla)
		Me.SendPropertyChanging
		entity.Cho_Choferes = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Informe_Barras")>  _
Partial Public Class Informe_Barras
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Fecha_Hora As System.Nullable(Of Date)
	
	Private _Ruta As System.Nullable(Of Integer)
	
	Private _Unidad As System.Nullable(Of Integer)
	
	Private _Cod_Usuario As System.Nullable(Of Integer)
	
	Private _Boleta As System.Nullable(Of Integer)
	
	Private _Sobrante As System.Nullable(Of Double)
	
	Private _Vales As System.Nullable(Of Double)
	
	Private _Adultos_Mayores As System.Nullable(Of Integer)
	
	Private _Info_ID_Chofer As System.Nullable(Of Integer)
	
	Private _Info_ID As Integer
	
	Private _Cho_Choferes As EntityRef(Of Cho_Choferes)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFecha_HoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_HoraChanged()
    End Sub
    Partial Private Sub OnRutaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRutaChanged()
    End Sub
    Partial Private Sub OnUnidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnCod_UsuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCod_UsuarioChanged()
    End Sub
    Partial Private Sub OnBoletaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBoletaChanged()
    End Sub
    Partial Private Sub OnSobranteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSobranteChanged()
    End Sub
    Partial Private Sub OnValesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValesChanged()
    End Sub
    Partial Private Sub OnAdultos_MayoresChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAdultos_MayoresChanged()
    End Sub
    Partial Private Sub OnInfo_ID_ChoferChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInfo_ID_ChoferChanged()
    End Sub
    Partial Private Sub OnInfo_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnInfo_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Cho_Choferes = CType(Nothing, EntityRef(Of Cho_Choferes))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Hora", DbType:="DateTime")>  _
	Public Property Fecha_Hora() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_Hora
		End Get
		Set
			If (Me._Fecha_Hora.Equals(value) = false) Then
				Me.OnFecha_HoraChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Hora = value
				Me.SendPropertyChanged("Fecha_Hora")
				Me.OnFecha_HoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ruta", DbType:="Int")>  _
	Public Property Ruta() As System.Nullable(Of Integer)
		Get
			Return Me._Ruta
		End Get
		Set
			If (Me._Ruta.Equals(value) = false) Then
				Me.OnRutaChanging(value)
				Me.SendPropertyChanging
				Me._Ruta = value
				Me.SendPropertyChanged("Ruta")
				Me.OnRutaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="Int")>  _
	Public Property Unidad() As System.Nullable(Of Integer)
		Get
			Return Me._Unidad
		End Get
		Set
			If (Me._Unidad.Equals(value) = false) Then
				Me.OnUnidadChanging(value)
				Me.SendPropertyChanging
				Me._Unidad = value
				Me.SendPropertyChanged("Unidad")
				Me.OnUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cod_Usuario", DbType:="Int")>  _
	Public Property Cod_Usuario() As System.Nullable(Of Integer)
		Get
			Return Me._Cod_Usuario
		End Get
		Set
			If (Me._Cod_Usuario.Equals(value) = false) Then
				Me.OnCod_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Cod_Usuario = value
				Me.SendPropertyChanged("Cod_Usuario")
				Me.OnCod_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Boleta", DbType:="Int")>  _
	Public Property Boleta() As System.Nullable(Of Integer)
		Get
			Return Me._Boleta
		End Get
		Set
			If (Me._Boleta.Equals(value) = false) Then
				Me.OnBoletaChanging(value)
				Me.SendPropertyChanging
				Me._Boleta = value
				Me.SendPropertyChanged("Boleta")
				Me.OnBoletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sobrante", DbType:="Float")>  _
	Public Property Sobrante() As System.Nullable(Of Double)
		Get
			Return Me._Sobrante
		End Get
		Set
			If (Me._Sobrante.Equals(value) = false) Then
				Me.OnSobranteChanging(value)
				Me.SendPropertyChanging
				Me._Sobrante = value
				Me.SendPropertyChanged("Sobrante")
				Me.OnSobranteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vales", DbType:="Float")>  _
	Public Property Vales() As System.Nullable(Of Double)
		Get
			Return Me._Vales
		End Get
		Set
			If (Me._Vales.Equals(value) = false) Then
				Me.OnValesChanging(value)
				Me.SendPropertyChanging
				Me._Vales = value
				Me.SendPropertyChanged("Vales")
				Me.OnValesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Adultos_Mayores", DbType:="Int")>  _
	Public Property Adultos_Mayores() As System.Nullable(Of Integer)
		Get
			Return Me._Adultos_Mayores
		End Get
		Set
			If (Me._Adultos_Mayores.Equals(value) = false) Then
				Me.OnAdultos_MayoresChanging(value)
				Me.SendPropertyChanging
				Me._Adultos_Mayores = value
				Me.SendPropertyChanged("Adultos_Mayores")
				Me.OnAdultos_MayoresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_ID_Chofer", DbType:="Int")>  _
	Public Property Info_ID_Chofer() As System.Nullable(Of Integer)
		Get
			Return Me._Info_ID_Chofer
		End Get
		Set
			If (Me._Info_ID_Chofer.Equals(value) = false) Then
				If Me._Cho_Choferes.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnInfo_ID_ChoferChanging(value)
				Me.SendPropertyChanging
				Me._Info_ID_Chofer = value
				Me.SendPropertyChanged("Info_ID_Chofer")
				Me.OnInfo_ID_ChoferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Info_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Info_ID() As Integer
		Get
			Return Me._Info_ID
		End Get
		Set
			If ((Me._Info_ID = value)  _
						= false) Then
				Me.OnInfo_IDChanging(value)
				Me.SendPropertyChanging
				Me._Info_ID = value
				Me.SendPropertyChanged("Info_ID")
				Me.OnInfo_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cho_Choferes_Informe_Barras", Storage:="_Cho_Choferes", ThisKey:="Info_ID_Chofer", OtherKey:="Cho_Cedula", IsForeignKey:=true)>  _
	Public Property Cho_Choferes() As Cho_Choferes
		Get
			Return Me._Cho_Choferes.Entity
		End Get
		Set
			Dim previousValue As Cho_Choferes = Me._Cho_Choferes.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Cho_Choferes.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Cho_Choferes.Entity = Nothing
					previousValue.Informe_Barras.Remove(Me)
				End If
				Me._Cho_Choferes.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Informe_Barras.Add(Me)
					Me._Info_ID_Chofer = value.Cho_Cedula
				Else
					Me._Info_ID_Chofer = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Cho_Choferes")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Planilla")>  _
Partial Public Class Planilla
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Plan_ID As Integer
	
	Private _Pla_Cedula_Cho As System.Nullable(Of Integer)
	
	Private _Pla_Saldo_Vales As System.Nullable(Of Double)
	
	Private _Pla_Saldo_Sobrantes As System.Nullable(Of Double)
	
	Private _Pla_Diferencia As System.Nullable(Of Double)
	
	Private _Pla_Bonificacion As System.Nullable(Of Double)
	
	Private _Pla_Monto_Reinte As System.Nullable(Of Double)
	
	Private _Pla_Monto_Rebajar As System.Nullable(Of Double)
	
	Private _Cho_Choferes As EntityRef(Of Cho_Choferes)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPlan_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlan_IDChanged()
    End Sub
    Partial Private Sub OnPla_Cedula_ChoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPla_Cedula_ChoChanged()
    End Sub
    Partial Private Sub OnPla_Saldo_ValesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Saldo_ValesChanged()
    End Sub
    Partial Private Sub OnPla_Saldo_SobrantesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Saldo_SobrantesChanged()
    End Sub
    Partial Private Sub OnPla_DiferenciaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_DiferenciaChanged()
    End Sub
    Partial Private Sub OnPla_BonificacionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_BonificacionChanged()
    End Sub
    Partial Private Sub OnPla_Monto_ReinteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Monto_ReinteChanged()
    End Sub
    Partial Private Sub OnPla_Monto_RebajarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPla_Monto_RebajarChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Cho_Choferes = CType(Nothing, EntityRef(Of Cho_Choferes))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plan_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Plan_ID() As Integer
		Get
			Return Me._Plan_ID
		End Get
		Set
			If ((Me._Plan_ID = value)  _
						= false) Then
				Me.OnPlan_IDChanging(value)
				Me.SendPropertyChanging
				Me._Plan_ID = value
				Me.SendPropertyChanged("Plan_ID")
				Me.OnPlan_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Cedula_Cho", DbType:="Int")>  _
	Public Property Pla_Cedula_Cho() As System.Nullable(Of Integer)
		Get
			Return Me._Pla_Cedula_Cho
		End Get
		Set
			If (Me._Pla_Cedula_Cho.Equals(value) = false) Then
				If Me._Cho_Choferes.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPla_Cedula_ChoChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Cedula_Cho = value
				Me.SendPropertyChanged("Pla_Cedula_Cho")
				Me.OnPla_Cedula_ChoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Saldo_Vales", DbType:="Float")>  _
	Public Property Pla_Saldo_Vales() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Saldo_Vales
		End Get
		Set
			If (Me._Pla_Saldo_Vales.Equals(value) = false) Then
				Me.OnPla_Saldo_ValesChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Saldo_Vales = value
				Me.SendPropertyChanged("Pla_Saldo_Vales")
				Me.OnPla_Saldo_ValesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Saldo_Sobrantes", DbType:="Float")>  _
	Public Property Pla_Saldo_Sobrantes() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Saldo_Sobrantes
		End Get
		Set
			If (Me._Pla_Saldo_Sobrantes.Equals(value) = false) Then
				Me.OnPla_Saldo_SobrantesChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Saldo_Sobrantes = value
				Me.SendPropertyChanged("Pla_Saldo_Sobrantes")
				Me.OnPla_Saldo_SobrantesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Diferencia", DbType:="Float")>  _
	Public Property Pla_Diferencia() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Diferencia
		End Get
		Set
			If (Me._Pla_Diferencia.Equals(value) = false) Then
				Me.OnPla_DiferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Diferencia = value
				Me.SendPropertyChanged("Pla_Diferencia")
				Me.OnPla_DiferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Bonificacion", DbType:="Float")>  _
	Public Property Pla_Bonificacion() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Bonificacion
		End Get
		Set
			If (Me._Pla_Bonificacion.Equals(value) = false) Then
				Me.OnPla_BonificacionChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Bonificacion = value
				Me.SendPropertyChanged("Pla_Bonificacion")
				Me.OnPla_BonificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Monto_Reinte", DbType:="Float")>  _
	Public Property Pla_Monto_Reinte() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Monto_Reinte
		End Get
		Set
			If (Me._Pla_Monto_Reinte.Equals(value) = false) Then
				Me.OnPla_Monto_ReinteChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Monto_Reinte = value
				Me.SendPropertyChanged("Pla_Monto_Reinte")
				Me.OnPla_Monto_ReinteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pla_Monto_Rebajar", DbType:="Float")>  _
	Public Property Pla_Monto_Rebajar() As System.Nullable(Of Double)
		Get
			Return Me._Pla_Monto_Rebajar
		End Get
		Set
			If (Me._Pla_Monto_Rebajar.Equals(value) = false) Then
				Me.OnPla_Monto_RebajarChanging(value)
				Me.SendPropertyChanging
				Me._Pla_Monto_Rebajar = value
				Me.SendPropertyChanged("Pla_Monto_Rebajar")
				Me.OnPla_Monto_RebajarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cho_Choferes_Planilla", Storage:="_Cho_Choferes", ThisKey:="Pla_Cedula_Cho", OtherKey:="Cho_Cedula", IsForeignKey:=true)>  _
	Public Property Cho_Choferes() As Cho_Choferes
		Get
			Return Me._Cho_Choferes.Entity
		End Get
		Set
			Dim previousValue As Cho_Choferes = Me._Cho_Choferes.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Cho_Choferes.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Cho_Choferes.Entity = Nothing
					previousValue.Planilla.Remove(Me)
				End If
				Me._Cho_Choferes.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Planilla.Add(Me)
					Me._Pla_Cedula_Cho = value.Cho_Cedula
				Else
					Me._Pla_Cedula_Cho = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Cho_Choferes")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
